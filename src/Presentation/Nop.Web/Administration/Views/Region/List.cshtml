@model Telerik.Web.Mvc.GridModel<Nop.Admin.Models.Regions.RegionModel>
@using Telerik.Web.Mvc.UI
@{  
    //page title
    ViewBag.Title = T("ITB.Admin.Region.Page.Title").Text;
    var gridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSize;
}
<div class="section-header">
    <div class="title">
        <img src="@Url.Content("~/Administration/Content/images/ico-catalog.png")" alt="" />
        @T("ITB.Admin.Region.Page.Title")
    </div>
</div>
<table class="adminContent">
    <tr>
        <td>
            @(Html.Telerik().Grid<Nop.Admin.Models.Regions.RegionModel>(Model.Data)
                    .Name("region-grid")
                    .DataKeys(x =>
                    {
                        x.Add(y => y.Id).RouteKey("Id"); ;
                    })
                    .Columns(columns =>
                    {
                        columns.Bound(x => x.Title)
                            .Width(200);
                        columns.Bound(x => x.Code)
                            .Width(200);
                        columns.Bound(x => x.Id)
                            .Template(@<text><a href="/Admin/Region/CityList?regionId=@item.Id" target="_blank">@T("ITB.Admin.Region.Cities.Edit")</a></text>)
                            .ClientTemplate("<a href=\"/Admin/Region/CityList?regionId=<#= Id #>\" target=\"_blank\">" + T("ITB.Admin.Region.Cities.Edit").Text + "</a>")                
                            .Width(200)
                            .Title(T("Admin.Common.Edit").Text)
                            .ReadOnly(true);
                        columns.Command(commands =>
                            {
                                commands.Edit().Text("Edit");
                                commands.Delete().Text("Delete");
                            }).Width(180).Title(T("ETF.Common.Commands").Text);
                    })
                    .ToolBar(commands => commands.Insert().ButtonType(GridButtonType.Text).ImageHtmlAttributes(new {style="margin-left:0"}))
                    .Editable(x =>
                    {
                        x.Mode(GridEditMode.InLine);
                    })
                    .DataBinding(dataBinding =>
                    {
                        dataBinding.Ajax()
                            .Insert("Insert", "Region")
                            .Update("Update", "Region")
                            .Delete("Delete", "Region")
                            .Select("List", "Region");
                    })
                    .Pageable(settings => settings.Total(Model.Total).PageSize(gridPageSize).Position(GridPagerPosition.Both))
                    .EnableCustomBinding(false)
                    .ClientEvents(x => x.OnError("Grid_onError")))
        </td>
    </tr>
</table>
<script type="text/javascript">
    function Grid_onError(e) {
        alert(e.XMLHttpRequest.responseText);
        e.preventDefault();
    }
</script>