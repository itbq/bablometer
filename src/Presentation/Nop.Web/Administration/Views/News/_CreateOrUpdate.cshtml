@model NewsItemModel

@using Telerik.Web.Mvc.UI;
@Html.ValidationSummary(true)
@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model=>model.Company)

<table class="adminContent">
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.LanguageId):
        </td>
        <td class="adminData">
            @Html.DropDownListFor(model => model.LanguageId, new SelectList(ViewBag.AllLanguages, "Id", "Name"))
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.Title):
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.Short):
        </td>
        <td class="adminData">
            @Html.TextAreaFor(model => model.Short, new { style = "Width: 500px; Height: 150px;" })
            @Html.ValidationMessageFor(model => model.Short)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.Full):
        </td>
        <td class="adminData">
            @Html.EditorFor(x => x.Full, "NewsRichEditorImage")
            @Html.ValidationMessageFor(model => model.Full)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(mode=>Model.PictureId)
        </td>
        <td class="adminData">
            @Html.EditorFor(x=>x.PictureId)
        </td>
    </tr>

    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model=>model.CatalogPictureId)
        </td>
        <td class="adminData">
            @Html.EditorFor(x=>x.CatalogPictureId)
        </td>
    </tr>
    @*<tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.AllowComments):
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.AllowComments)
            @Html.ValidationMessageFor(model => model.AllowComments)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.StartDate):
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.StartDate)
            @Html.ValidationMessageFor(model => model.StartDate)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.EndDate):
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.EndDate)
            @Html.ValidationMessageFor(model => model.EndDate)
        </td>
    </tr>*@
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.Published):
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.Published)
            @Html.ValidationMessageFor(model => model.Published)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.SeName):
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.SeName)
            @Html.ValidationMessageFor(model => model.SeName)
        </td>
    </tr>
    <tr>
        @if(Model.Id == 0)
        {
            <td>
                @Html.HiddenFor(model=>model.ExtendedProfileOnly)
            </td>
        }else
        {
            if (Model.CompanyId != 0)
            {
                <td class="adminTitle">
                    @Html.LabelFor(model=>model.ExtendedProfileOnly)
                </td>
                <td class="adminData">
                    @Html.DropDownListFor(model => model.ExtendedProfileOnly, new List<SelectListItem>()
                    {
                        new SelectListItem(){Selected = (Model.ExtendedProfileOnly & (int)Nop.Core.Domain.News.NewsDisplayEnum.Both) == (int)Nop.Core.Domain.News.NewsDisplayEnum.Both,Text = Nop.Core.Domain.News.NewsDisplayEnum.Both.ToString(),Value = ((int)Nop.Core.Domain.News.NewsDisplayEnum.Both).ToString()},
                        new SelectListItem(){Selected = (Model.ExtendedProfileOnly & (int)Nop.Core.Domain.News.NewsDisplayEnum.Main) == (int)Nop.Core.Domain.News.NewsDisplayEnum.Main,Text = Nop.Core.Domain.News.NewsDisplayEnum.Main.ToString(),Value = ((int)Nop.Core.Domain.News.NewsDisplayEnum.Main).ToString()},
                        new SelectListItem(){Selected = (Model.ExtendedProfileOnly & (int)Nop.Core.Domain.News.NewsDisplayEnum.MiniSite) == (int)Nop.Core.Domain.News.NewsDisplayEnum.MiniSite,Text = Nop.Core.Domain.News.NewsDisplayEnum.MiniSite.ToString(),Value = ((int)Nop.Core.Domain.News.NewsDisplayEnum.MiniSite).ToString()}
                    })
                </td>
            }else
            {
                <td>
                    @Html.HiddenFor(model=>model.ExtendedProfileOnly)
                </td>
            }
        }
    </tr>
</table>
