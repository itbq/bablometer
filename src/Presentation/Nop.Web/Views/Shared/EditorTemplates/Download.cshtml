@model int
@using Nop.Core;
@using Nop.Web.Framework.UI;
@{
    //register CSS and JS
    Html.AddCssFileParts("~/Administration/Content/fileuploader.css");
    Html.AddScriptParts("~/Administration/Scripts/fileuploader.js");
    //Html.AddCssFileParts("~/Content/fileuploader.css");
    //Html.AddScriptParts("~/Scripts/fileuploader.js");
    
    //other variables
    var randomNumber = CommonHelper.GenerateRandomInteger();
    var clientId = "download" + randomNumber;
    var downloadService = Nop.Core.Infrastructure.EngineContext.Current.Resolve<Nop.Services.Media.IDownloadService>();
    var download = downloadService.GetDownloadById(Model);
}

<div id="@(clientId + "value")">
    @Html.HiddenFor(x => x)
</div>
<div id="pnlDownloadFile@(randomNumber)">
    <div id="@clientId">
        <noscript>
            <p>
                Please enable JavaScript to use file uploader.</p>
            <!-- or put a simple form for upload here -->
        </noscript>
    </div>
    <script type="text/javascript">
    $(function () {
        $(function () {                        
            var uploader@(clientId) = new qq.FileUploader({
                element: document.getElementById('@clientId'),
                sizeLimit: 10.48e6,
                multiple: false,
                allowedExtensions: ['doc','docx','xls','xlsx','xlsm','pdf','zip','rar','7zip','png','jpg','jpeg'],
                action: '@(Url.Content("~/Download/AsyncUpload"))',
                onComplete: function (id, fileName, responseJSON) {
                    if (!responseJSON.success) {
                        $('#firstPopOk h2').text('@T("ETF.Profile.Error")');
                        $('#firstPopOk p').text(responseJSON.errorString);
                        showPop("firstPopOk");
                        return;
                    }
                    $("#@(clientId + "value") input").val(responseJSON.id);
                    if ($("#@(clientId + "value")").parents('#add-legal-documents').length != 0) {
                        AddDocument(true);
                    } else {
                        AddDocument(false);
                    }
                },
                messages: {
                    typeError: "@T("ETF.File.Extension.Error")",
                    sizeError: "@T("ETF.File.Size.Error")",
                    minSizeError: "@T("ETF.File.Min.Size.Error")",
                    emptyError: "@T("ETF.File.Emplty.Error")",
                    onLeave: "@T("ETF.File.Common.Error")"
                },
                strings: {
                    upload: "@T("Common.FileUploader.Upload")",
                    drop: "@T("Common.FileUploader.DropFiles")",
                    cancel: "@T("Common.FileUploader.Cancel")",
                    failed: "@T("Common.FileUploader.Failed")"
                }
            });
        });
    });
</script>
</div>


