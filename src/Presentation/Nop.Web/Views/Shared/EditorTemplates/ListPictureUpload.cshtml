@model int
@using Nop.Core;
@using Nop.Web.Framework.UI;
@{
    //register CSS and JS
    Html.AddCssFileParts("~/Administration/Content/fileuploader.css");
    Html.AddScriptParts("~/Administration/Scripts/fileuploader.js");

    //other variables
    var random = CommonHelper.GenerateRandomInteger();
    var clientId = "picture" + random;
    var pictureService = Nop.Core.Infrastructure.EngineContext.Current.Resolve<Nop.Services.Media.IPictureService>();
    var picture = pictureService.GetPictureById(Model);
}
<div id="@(clientId + "value")">
    @Html.HiddenFor(x => x)
</div>
@*@if (picture != null)
{
    <span id="@(clientId + "remove")" class="t-button">@T("Admin.Picture.RemovePicture")</span>
}
else
{
    <span id="@(clientId + "remove")" class="t-button" style="display:none;">@T("Admin.Picture.RemovePicture")</span>
}
<br />*@
<div id="@clientId">
    <noscript>
        <p>
            Please enable JavaScript to use file uploader.</p>
        <!-- or put a simple form for upload here -->
    </noscript>
</div>
<script type="text/javascript">
    $(function () {
        $(function () {
            var uploader@(clientId) = new qq.FileUploader({
                element: document.getElementById('@clientId'),
                action: '@(Url.Content("~/Picture/AsyncUpload"))',
                allowedExtensions: ['jpg', 'jpeg', 'png', 'gif'],
                sizeLimit: 5.24e5,
                multiple: false,
                multiple:false,
                onComplete: function (id, fileName, responseJSON) {
                    if (responseJSON.success) {
                        $("#@(clientId + "value") input").val(responseJSON.pictureId);
                        $('.qq-upload-list').hide();
                        AddProductPicture(responseJSON.pictureId);
                        var count = $('#product-picture-list li span').length;
                        if (count >= 6) {
                            $('.imageUploader .tools').hide();
                        }
                    } else {
                        $('.qq-upload-list').hide();
                        $('.qq-upload-fail').hide();
                        $('#firstPopOk h2').text('@T("ETF.Profile.Error")');
                        $('#firstPopOk p').text(responseJSON.imageUrl);
                        showPop("firstPopOk");
                    }
                    var obj = $("#ProductPictureList_LoaderGif");
                    if (obj != null) {
                        obj.hide();
                    }
                },
                onProgress: function (id, fileName, loaded, total) {
                    $('.qq-upload-list').hide();
                    var obj = $("#ProductPictureList_LoaderGif");
                    if (obj != null) {
                        obj.show();
                    }
                },
                messages: {
                    typeError: "@T("ETF.File.Extension.Error")",
                    sizeError: "@T("ETF.File.Size.Error")",
                    minSizeError: "@T("ETF.File.Min.Size.Error")",
                    emptyError: "@T("ETF.File.Emplty.Error")",
                    onLeave: "@T("ETF.File.Common.Error")"
                },
                strings: {
                    upload: "@T("Common.FileUploader.Upload")",
                    drop: "@T("Common.FileUploader.DropFiles")",
                    cancel: "@T("Common.FileUploader.Cancel")",
                    failed: "@T("Common.FileUploader.Failed")"
                }
            });
        });
    });
</script>
